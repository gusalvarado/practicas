module.exports = {
  env: {
    browser: true,
    es2021: true,
    node: true,
    jest: true,
  },
  extends: [
    "eslint:recommended",
    "@typescript-eslint/recommended",
    "plugin:security/recommended",
    "plugin:sonarjs/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
  ],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaVersion: "latest",
    sourceType: "module",
    project: "./tsconfig.json",
  },
  plugins: ["security", "sonarjs", "import", "@typescript-eslint"],
  rules: {
    // Reglas de complejidad
    complexity: ["error", 10],
    "max-lines-per-function": ["error", 50],
    "max-depth": ["error", 4],
    "max-lines": ["error", 300],
    "max-params": ["error", 4],

    // Reglas de SonarJS
    "sonarjs/cognitive-complexity": ["error", 15],
    "sonarjs/no-duplicate-string": ["error", 3],
    "sonarjs/no-identical-functions": "error",
    "sonarjs/no-redundant-boolean": "error",
    "sonarjs/no-unused-collection": "error",
    "sonarjs/prefer-immediate-return": "error",
    "sonarjs/prefer-single-boolean-return": "error",

    // Reglas de seguridad
    "security/detect-object-injection": "error",
    "security/detect-non-literal-regexp": "error",
    "security/detect-unsafe-regex": "error",
    "security/detect-buffer-noassert": "error",
    "security/detect-child-process": "error",
    "security/detect-disable-mustache-escape": "error",
    "security/detect-eval-with-expression": "error",
    "security/detect-no-csrf-before-method-override": "error",
    "security/detect-non-literal-fs-filename": "error",
    "security/detect-non-literal-require": "error",
    "security/detect-non-literal-regexp": "error",
    "security/detect-possible-timing-attacks": "error",
    "security/detect-pseudoRandomBytes": "error",

    // Reglas de TypeScript
    "@typescript-eslint/no-unused-vars": ["error", { argsIgnorePattern: "^_" }],
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/await-thenable": "error",

    // Reglas de importaci√≥n
    "import/order": [
      "error",
      {
        groups: [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
        ],
        "newlines-between": "always",
        alphabetize: {
          order: "asc",
          caseInsensitive: true,
        },
      },
    ],
    "import/no-unresolved": "error",
    "import/no-cycle": "error",
    "import/no-self-import": "error",
    "import/no-useless-path-segments": "error",

    // Reglas generales
    "no-console": "warn",
    "no-debugger": "error",
    "no-alert": "error",
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-script-url": "error",
    "no-var": "error",
    "prefer-const": "error",
    "prefer-arrow-callback": "error",
    "prefer-template": "error",
    "object-shorthand": "error",
    "no-duplicate-imports": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-useless-constructor": "error",
    "no-useless-concat": "error",
    "no-useless-computed-key": "error",
    "no-useless-escape": "error",
    "no-useless-return": "error",
    "no-useless-constructor": "error",
    "no-useless-concat": "error",
    "no-useless-computed-key": "error",
    "no-useless-escape": "error",

    // Reglas de formato
    indent: ["error", 2],
    quotes: ["error", "single"],
    semi: ["error", "always"],
    "comma-dangle": ["error", "always-multiline"],
    "object-curly-spacing": ["error", "always"],
    "array-bracket-spacing": ["error", "never"],
    "computed-property-spacing": ["error", "never"],
    "space-before-blocks": "error",
    "space-before-function-paren": ["error", "never"],
    "space-in-parens": ["error", "never"],
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "spaced-comment": ["error", "always"],
    "keyword-spacing": "error",
    "brace-style": ["error", "1tbs"],
    camelcase: ["error", { properties: "never" }],
    "new-cap": "error",
    "new-parens": "error",
    "no-array-constructor": "error",
    "no-new-object": "error",
    "no-trailing-spaces": "error",
    "no-multiple-empty-lines": ["error", { max: 2 }],
    "eol-last": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-tabs": "error",
  },
  overrides: [
    {
      files: ["*.test.js", "*.test.ts", "*.spec.js", "*.spec.ts"],
      env: {
        jest: true,
      },
      rules: {
        "max-lines-per-function": "off",
        "sonarjs/cognitive-complexity": "off",
        "@typescript-eslint/no-explicit-any": "off",
      },
    },
    {
      files: ["*.config.js", "*.config.ts"],
      rules: {
        "import/no-commonjs": "off",
        "@typescript-eslint/no-var-requires": "off",
      },
    },
  ],
  settings: {
    "import/resolver": {
      typescript: {
        alwaysTryTypes: true,
        project: "./tsconfig.json",
      },
    },
  },
  ignorePatterns: [
    "node_modules/",
    "dist/",
    "build/",
    "coverage/",
    "*.min.js",
    "*.bundle.js",
  ],
};
